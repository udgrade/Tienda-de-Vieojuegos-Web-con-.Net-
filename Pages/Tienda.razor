@page "/store"

@using OnlineBlazorApp.Data.Model
@using OnlineBlazorApp.Data.Service
@using System.IO

@inject IJSRuntime JSRuntime
@inject IProductoService ProductoService
@inject NavigationManager NavigationManager
@inject IPuntuacionesService PuntuacionesService
@inject IUsuarioService UsuarioService

@inject Blazored.SessionStorage.ISessionStorageService sessionCarrito

@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor httpContextAccessor



<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.1/css/all.css" integrity="sha384-gfdkjb5BdAXd+lj+gudLWI+BXq4IuLW5IT+brZEZsLFm++aCMlF1V92rMkPaX4PP" crossorigin="anonymous">
    <style>
        :root {
            --color-inactivo: #5f5050;
            --color-hover: #ffa400;
        }

        .valoracion {
            display: flex;
            flex-direction: row-reverse;
        }

            .valoracion button {
                background-color: initial;
                border: 0;
                color: var(--color-inactivo);
                transition: 1s all;
            }

                .valoracion button:hover {
                    cursor: pointer;
                    color: var(--color-hover);
                    transform: rotate(360deg);
                }

        button:nth-child(1):hover ~ button {
            color: var(--color-hover);
            transform: rotate(360deg);
        }

        button:nth-child(2):hover ~ button {
            color: var(--color-hover);
            transform: rotate(360deg);
        }

        button:nth-child(3):hover ~ button {
            color: var(--color-hover);
            transform: rotate(360deg);
        }

        button:nth-child(4):hover ~ button {
            color: var(--color-hover);
            transform: rotate(360deg);
        }

        button:nth-child(5):hover ~ button {
            color: var(--color-hover);
            transform: rotate(360deg);
        }
    </style>
</head>




<tbody>

    <p>usuario autenticado @codeusuario</p>

    <div class="input-group">
        <input type="text" id="busqueda" @bind="busqueda" placeholder="Buscar Producto" class="form-control" />
        <span>

            <button type="submit" class="btn btn-default btn-info my-auto p-2" value="Buscar" @onclick="() => Buscar(busqueda)">
                <i class="fas fa-search"></i>
            </button>

        </span>
    </div>

    <select class="selectpicker" @onchange="SeleccionarGenero">
        <optgroup label="Genero">
            <option>Ninguno</option>
            <option value="Accion">Accion</option>
            <option value="Terror">Terror</option>
            <option value="Aventura">Aventura</option>
            <option value="Plataformas">Plataformas</option>
            <option value="Supervivencia">Supervivencia</option>
        </optgroup>
    </select>

    <div class="Fondo_Principal">
        <div class="Fondo_Principal">

            <div class="Fondo_Primario">

                <!--TITULO DESTACADOS-->
                <h1 class="Destacados">Productos</h1>

            </div>

            <div class="Fondo_Secundario">


                @if (productos != null)
                {

                    @foreach (var producto in productos)
                    {

                        if (producto.Descuent_Prod == 0)
                        {
                            //flex row-flex column//
                            <!--Tarjeta que contiene el juego-->

                            <div class="tarjeta_portada">
                                <!--TITULO DEL JUEGO-->
                                <div class="title_portada">
                                    @producto.Name_Prod
                                </div>
                                <!--CARATULA DEL JUEGO-->
                                <NavLink class="" @onclick="()=> SeleccionarProducto(producto.Codi_Prod)">
                                    <div>
                                        <img class="img_portada" src="@producto.Imgn_Prod" />
                                    </div>
                                </NavLink>
                                <!--SCORE DEL JUEGO-->
                                <div class="score_portada">

                                    <div class="valoracion">

                                        <button @onclick="()=> Calificacion(5, producto.Codi_Prod)"> <i class="fas fa-star"></i> </button>
                                        <button @onclick="()=> Calificacion(4, producto.Codi_Prod)"> <i class="fas fa-star"></i> </button>
                                        <button @onclick="()=> Calificacion(3, producto.Codi_Prod)"> <i class="fas fa-star"></i> </button>
                                        <button @onclick="()=> Calificacion(2, producto.Codi_Prod)"> <i class="fas fa-star"></i> </button>
                                        <button @onclick="()=> Calificacion(1, producto.Codi_Prod)"> <i class="fas fa-star"></i> </button>

                                    </div>
                                </div>

                                <div class="precio_portada">
                                    <p>Genero:@producto.Genero</p>
                                </div>
                                <!--PRECIO DEL JUEGO-->
                                <div class="precio_portada">
                                    <p>COP: $@producto.Pric_Prod</p>
                                </div>
                            </div>

                        }

                    }
                }
            </div>

        </div>
    </div>
    <br>
    <br />
    <div class="Fondo_Principal">
        <div class="Fondo_Principal">

            <div class="Fondo_Primario">

                <!--TITULO DESTACADOS-->
                <h1 class="Destacados">Descuentos</h1>

            </div>
            <div class="Fondo_Secundario">


                @if (productos != null)
                {
                    foreach (var producto in productos)
                    {

                        if (producto.Descuent_Prod > 0)
                        {

                            <!--Tarjeta que contiene el juego-->

                            <div class="tarjeta_portada">
                                <!--TITULO DEL JUEGO-->
                                <div class="title_portada">
                                    @producto.Name_Prod
                                </div>
                                <!--CARATULA DEL JUEGO-->
                                <NavLink class="" @onclick="()=> SeleccionarProducto(producto.Codi_Prod)">
                                    <div>
                                        <img class="img_portada" src="@producto.Imgn_Prod" />
                                    </div>
                                </NavLink>
                                <!--SCORE DEL JUEGO-->
                                <div class="score_portada">

                                    <div class="valoracion">

                                        <button @onclick="()=> Calificacion(5, producto.Codi_Prod)"> <i class="fas fa-star"></i> </button>
                                        <button @onclick="()=> Calificacion(4, producto.Codi_Prod)"> <i class="fas fa-star"></i> </button>
                                        <button @onclick="()=> Calificacion(3, producto.Codi_Prod)"> <i class="fas fa-star"></i> </button>
                                        <button @onclick="()=> Calificacion(2, producto.Codi_Prod)"> <i class="fas fa-star"></i> </button>
                                        <button @onclick="()=> Calificacion(1, producto.Codi_Prod)"> <i class="fas fa-star"></i> </button>

                                    </div>
                                </div>
                                <div class="precio_portada">
                                    <p>Genero:@producto.Genero</p>
                                </div>
                                <!--PRECIO DEL JUEGO-->
                                <div class="precio_portada">
                                    <p>AHORA COP: $@producto.Descuent_Prod</p>
                                </div>
                                <div class="precio_portada">
                                    <p>ANTES COP: $@producto.Pric_Prod</p>
                                </div>

                            </div>

                        }



                    }
                }
            </div>

        </div>
    </div>
</tbody>

@code {

    IEnumerable<Productos> productos;
    IEnumerable<Productos> filtros;
    Puntuaciones puntuacion = null;

    // [Parameter]
    //public string busqueda { get; set; }
    public string busqueda = "";
    public int Opcion;
    public string codeusuario="";

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private string _authMessage;

    private async Task LogUsername()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            _authMessage = $"{user.Identity.Name} is authenticated.";
        }
        else
        {
            _authMessage = "The user is NOT authenticated.";
        }
    }


    protected override async Task OnInitializedAsync()
    {
        //tiendas = await TiendaService.GetTiendas("Zoom", "");|


        if (busqueda == "")
        {
            productos = await ProductoService.GetAllProductos();
        }
        else
        {
            await Buscar(busqueda);
        }

        if (httpContextAccessor.HttpContext.User.Identity.Name != null)
        {
            codeusuario = httpContextAccessor.HttpContext.User.Identity.Name;
        }
        else
        {
            codeusuario = "";
        }
    }

    protected async Task Buscar(string busqueda)
    {

        productos = await ProductoService.Search(busqueda);
        //await JSRuntime.InvokeAsync<bool>

    }

    async Task SeleccionarGenero(ChangeEventArgs args)
    {

        productos = await ProductoService.FiltroAventuraGenero(Convert.ToString(args.Value));

    }

    public void SeleccionarProducto(int id)
    {
        NavigationManager.NavigateTo("/Compra/" + id);
    }

    public async Task Calificacion(int cal, int codprod)
    {
        Usuario usuario = new Usuario();
        usuario = await UsuarioService.UsuarioSelect(codeusuario);
        puntuacion = new Puntuaciones();
        puntuacion.Codi_ProdProductos = codprod;
        puntuacion.Scor_Punt = cal;
        puntuacion.Scor_Punt = cal;
        puntuacion.Codi_UserUsuarios = usuario.Id;
        await PuntuacionesService.PuntuacionesInsert(puntuacion);

    }


    }

}
}